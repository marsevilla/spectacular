{"ast":null,"code":"import { TestBed, waitForAsync } from '@angular/core/testing';\nimport { ActivatedRoute } from '@angular/router';\nimport { ParamHaterComponent } from './param-hater.component';\ndescribe('ParamHaterComponent', () => {\n  let component;\n  let fixture;\n  beforeEach(waitForAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [ParamHaterComponent],\n      // Import the standalone component here\n      providers: [{\n        provide: ActivatedRoute,\n        useValue: {\n          snapshot: {\n            params: {\n              id: '2' // Mocking the advice ID in the snapshot\n            }\n          }\n        }\n      }]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ParamHaterComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should display advice id', waitForAsync(() => {\n    fixture.whenStable().then(() => {\n      fixture.detectChanges();\n      const compiled = fixture.nativeElement;\n      console.log(compiled.innerHTML); // Log the native element's inner HTML\n      expect(compiled.querySelector('.advice-id').textContent).toContain('2');\n    });\n  }));\n});","map":{"version":3,"names":["TestBed","waitForAsync","ActivatedRoute","ParamHaterComponent","describe","component","fixture","beforeEach","configureTestingModule","imports","providers","provide","useValue","snapshot","params","id","compileComponents","createComponent","componentInstance","detectChanges","it","whenStable","then","compiled","nativeElement","console","log","innerHTML","expect","querySelector","textContent","toContain"],"sources":["/Users/mariadelmarsevillaescobar/Downloads/spectacular/src/app/follow-the-path/param-hater/param-hater.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { ActivatedRoute } from '@angular/router';\nimport { ParamHaterComponent } from './param-hater.component';\n\ndescribe('ParamHaterComponent', () => {\n  let component: ParamHaterComponent;\n  let fixture: ComponentFixture<ParamHaterComponent>;\n\n  beforeEach(waitForAsync(() => {\n    TestBed.configureTestingModule({\n      imports: [ParamHaterComponent],  // Import the standalone component here\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            snapshot: {\n              params: {\n                id: '2' // Mocking the advice ID in the snapshot\n              }\n            }\n          }\n        }\n      ]\n    }).compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ParamHaterComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should display advice id', waitForAsync(() => {\n    fixture.whenStable().then(() => {\n      fixture.detectChanges();\n      const compiled = fixture.nativeElement;\n      console.log(compiled.innerHTML); // Log the native element's inner HTML\n      expect(compiled.querySelector('.advice-id').textContent).toContain('2');\n    });\n  }));\n});\n"],"mappings":"AAAA,SAA2BA,OAAO,EAAEC,YAAY,QAAQ,uBAAuB;AAC/E,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,mBAAmB,QAAQ,yBAAyB;AAE7DC,QAAQ,CAAC,qBAAqB,EAAE,MAAK;EACnC,IAAIC,SAA8B;EAClC,IAAIC,OAA8C;EAElDC,UAAU,CAACN,YAAY,CAAC,MAAK;IAC3BD,OAAO,CAACQ,sBAAsB,CAAC;MAC7BC,OAAO,EAAE,CAACN,mBAAmB,CAAC;MAAG;MACjCO,SAAS,EAAE,CACT;QACEC,OAAO,EAAET,cAAc;QACvBU,QAAQ,EAAE;UACRC,QAAQ,EAAE;YACRC,MAAM,EAAE;cACNC,EAAE,EAAE,GAAG,CAAC;;;;OAIf;KAEJ,CAAC,CAACC,iBAAiB,EAAE;EACxB,CAAC,CAAC,CAAC;EAEHT,UAAU,CAAC,MAAK;IACdD,OAAO,GAAGN,OAAO,CAACiB,eAAe,CAACd,mBAAmB,CAAC;IACtDE,SAAS,GAAGC,OAAO,CAACY,iBAAiB;IACrCZ,OAAO,CAACa,aAAa,EAAE;EACzB,CAAC,CAAC;EAEFC,EAAE,CAAC,0BAA0B,EAAEnB,YAAY,CAAC,MAAK;IAC/CK,OAAO,CAACe,UAAU,EAAE,CAACC,IAAI,CAAC,MAAK;MAC7BhB,OAAO,CAACa,aAAa,EAAE;MACvB,MAAMI,QAAQ,GAAGjB,OAAO,CAACkB,aAAa;MACtCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC;MACjCC,MAAM,CAACL,QAAQ,CAACM,aAAa,CAAC,YAAY,CAAC,CAACC,WAAW,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC;IACzE,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}