{"ast":null,"code":"import _asyncToGenerator from \"/Users/mariadelmarsevillaescobar/Downloads/spectacular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { AdviceComponent } from './advice.component';\nimport { provideRouter } from '@angular/router';\nimport { By } from '@angular/platform-browser';\ndescribe('AdviceComponent', () => {\n  let component;\n  let fixture;\n  let debugEl;\n  let expectedAdvice = {\n    slip: {\n      id: 2,\n      advice: 'fake advice'\n    }\n  };\n  beforeEach(/*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      providers: [provideRouter([])]\n    }).compileComponents();\n    fixture = TestBed.createComponent(AdviceComponent);\n    component = fixture.componentInstance;\n    debugEl = fixture.debugElement;\n    fixture.detectChanges();\n    fixture.componentRef.setInput('advice', expectedAdvice);\n    yield fixture.whenStable();\n  }));\n  it('should display the advice', () => {\n    const advice = debugEl.query(By.css('p')).nativeElement;\n    expect(advice.textContent).toContain(expectedAdvice.slip.advice);\n  });\n  // Use spy\n  it('should redirect to the hate page', () => {});\n});","map":{"version":3,"names":["TestBed","AdviceComponent","provideRouter","By","describe","component","fixture","debugEl","expectedAdvice","slip","id","advice","beforeEach","_asyncToGenerator","configureTestingModule","providers","compileComponents","createComponent","componentInstance","debugElement","detectChanges","componentRef","setInput","whenStable","it","query","css","nativeElement","expect","textContent","toContain"],"sources":["/Users/mariadelmarsevillaescobar/Downloads/spectacular/src/app/spy-expert/advice/advice.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { Advice } from '../core/models/advice'\nimport { AdviceComponent } from './advice.component';\nimport { DebugElement } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { By } from '@angular/platform-browser';\nimport {  } from \"module\";\n\ndescribe('AdviceComponent', () => {\n\n  let component: AdviceComponent;\n  let fixture: ComponentFixture<AdviceComponent>;\n  let debugEl: DebugElement;\n  let expectedAdvice: Advice = { slip: { id: 2, advice: 'fake advice'}}\n\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      providers: [ provideRouter([])]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(AdviceComponent);\n    component = fixture.componentInstance;\n    debugEl = fixture.debugElement;\n    fixture.detectChanges();\n\n    fixture.componentRef.setInput('advice', expectedAdvice)\n    await fixture.whenStable();\n  });\n\n  it('should display the advice', () => {\n    const advice = debugEl.query(By.css('p')).nativeElement;\n    expect(advice.textContent).toContain(expectedAdvice.slip.advice);\n  });\n\n  // Use spy\n  it('should redirect to the hate page', () => {\n  });\n});\n"],"mappings":";AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AAEjE,SAASC,eAAe,QAAQ,oBAAoB;AAEpD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,EAAE,QAAQ,2BAA2B;AAG9CC,QAAQ,CAAC,iBAAiB,EAAE,MAAK;EAE/B,IAAIC,SAA0B;EAC9B,IAAIC,OAA0C;EAC9C,IAAIC,OAAqB;EACzB,IAAIC,cAAc,GAAW;IAAEC,IAAI,EAAE;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAa;EAAC,CAAC;EAGrEC,UAAU,cAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMb,OAAO,CAACc,sBAAsB,CAAC;MACnCC,SAAS,EAAE,CAAEb,aAAa,CAAC,EAAE,CAAC;KAC/B,CAAC,CACDc,iBAAiB,EAAE;IAEpBV,OAAO,GAAGN,OAAO,CAACiB,eAAe,CAAChB,eAAe,CAAC;IAClDI,SAAS,GAAGC,OAAO,CAACY,iBAAiB;IACrCX,OAAO,GAAGD,OAAO,CAACa,YAAY;IAC9Bb,OAAO,CAACc,aAAa,EAAE;IAEvBd,OAAO,CAACe,YAAY,CAACC,QAAQ,CAAC,QAAQ,EAAEd,cAAc,CAAC;IACvD,MAAMF,OAAO,CAACiB,UAAU,EAAE;EAC5B,CAAC,EAAC;EAEFC,EAAE,CAAC,2BAA2B,EAAE,MAAK;IACnC,MAAMb,MAAM,GAAGJ,OAAO,CAACkB,KAAK,CAACtB,EAAE,CAACuB,GAAG,CAAC,GAAG,CAAC,CAAC,CAACC,aAAa;IACvDC,MAAM,CAACjB,MAAM,CAACkB,WAAW,CAAC,CAACC,SAAS,CAACtB,cAAc,CAACC,IAAI,CAACE,MAAM,CAAC;EAClE,CAAC,CAAC;EAEF;EACAa,EAAE,CAAC,kCAAkC,EAAE,MAAK,CAC5C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}