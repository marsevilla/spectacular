{"ast":null,"code":"import _asyncToGenerator from \"/Users/mariadelmarsevillaescobar/Downloads/spectacular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { RouterTestingHarness } from '@angular/router/testing';\nconst routes = [{\n  path: 'advice/:id',\n  component: ParamHaterComponent\n}];\ndescribe('ParamHaterComponent with RouterTestingHarness', () => {\n  it('should display advice id from route', /*#__PURE__*/_asyncToGenerator(function* () {\n    const harness = yield RouterTestingHarness.create(routes);\n    const spectator = yield harness.navigateByUrl('/advice/42', ParamHaterComponent);\n    expect(spectator.query('.advice-id')?.textContent).toContain('42');\n  }));\n});","map":{"version":3,"names":["RouterTestingHarness","routes","path","component","ParamHaterComponent","describe","it","_asyncToGenerator","harness","create","spectator","navigateByUrl","expect","query","textContent","toContain"],"sources":["/Users/mariadelmarsevillaescobar/Downloads/spectacular/src/app/follow-the-path/param-hater/param-hater.component.spec.ts"],"sourcesContent":["import { RouterTestingHarness } from '@angular/router/testing';\nimport { Routes } from '@angular/router';\n\nconst routes: Routes = [{ path: 'advice/:id', component: ParamHaterComponent }];\n\ndescribe('ParamHaterComponent with RouterTestingHarness', () => {\n  it('should display advice id from route', async () => {\n    const harness = await RouterTestingHarness.create(routes);\n    const spectator = await harness.navigateByUrl('/advice/42', ParamHaterComponent);\n\n    expect(spectator.query('.advice-id')?.textContent).toContain('42');\n  });\n});\n"],"mappings":";AAAA,SAASA,oBAAoB,QAAQ,yBAAyB;AAG9D,MAAMC,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEC;AAAmB,CAAE,CAAC;AAE/EC,QAAQ,CAAC,+CAA+C,EAAE,MAAK;EAC7DC,EAAE,CAAC,qCAAqC,eAAAC,iBAAA,CAAE,aAAW;IACnD,MAAMC,OAAO,SAASR,oBAAoB,CAACS,MAAM,CAACR,MAAM,CAAC;IACzD,MAAMS,SAAS,SAASF,OAAO,CAACG,aAAa,CAAC,YAAY,EAAEP,mBAAmB,CAAC;IAEhFQ,MAAM,CAACF,SAAS,CAACG,KAAK,CAAC,YAAY,CAAC,EAAEC,WAAW,CAAC,CAACC,SAAS,CAAC,IAAI,CAAC;EACpE,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}