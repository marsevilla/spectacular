{"ast":null,"code":"import _asyncToGenerator from \"/Users/mariadelmarsevillaescobar/Downloads/spectacular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { RouterTestingHarness } from '@angular/router/testing';\nimport { ActivatedRoute } from '@angular/router';\nimport { of } from 'rxjs';\nlet ParamHaterComponent = class ParamHaterComponent {\n  route;\n  adviceId = null;\n  constructor(route) {\n    this.route = route;\n    this.route.paramMap.subscribe(params => {\n      this.adviceId = params.get('id');\n    });\n  }\n  static ctorParameters = () => [{\n    type: ActivatedRoute\n  }];\n};\nParamHaterComponent = __decorate([Component({\n  selector: 'app-param-hater',\n  template: '<p>Advice ID: {{ adviceId }}</p>'\n})], ParamHaterComponent);\ndescribe('ParamHaterComponent', () => {\n  beforeEach(/*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [RouterTestingHarness],\n      declarations: [ParamHaterComponent],\n      providers: [{\n        provide: ActivatedRoute,\n        useValue: {\n          paramMap: of(new Map([['id', '123']])) // Mocking route parameters\n        }\n      }]\n    }).compileComponents();\n  }));\n  it('should display advice id', /*#__PURE__*/_asyncToGenerator(function* () {\n    const harness = yield RouterTestingHarness.create();\n    const {\n      nativeElement\n    } = yield harness.navigateByComponent(ParamHaterComponent, {\n      params: {\n        id: '123'\n      }\n    });\n    expect(nativeElement.textContent).toContain('Advice ID: 123');\n  }));\n});","map":{"version":3,"names":["Component","TestBed","RouterTestingHarness","ActivatedRoute","of","ParamHaterComponent","route","adviceId","constructor","paramMap","subscribe","params","get","__decorate","selector","template","describe","beforeEach","_asyncToGenerator","configureTestingModule","imports","declarations","providers","provide","useValue","Map","compileComponents","it","harness","create","nativeElement","navigateByComponent","id","expect","textContent","toContain"],"sources":["/Users/mariadelmarsevillaescobar/Downloads/spectacular/src/app/follow-the-path/param-hater/param-hater.component.spec.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { RouterTestingHarness } from '@angular/router/testing';\nimport { ActivatedRoute } from '@angular/router';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-param-hater',\n  template: '<p>Advice ID: {{ adviceId }}</p>',\n})\nclass ParamHaterComponent {\n  adviceId: string | null = null;\n\n  constructor(private route: ActivatedRoute) {\n    this.route.paramMap.subscribe(params => {\n      this.adviceId = params.get('id');\n    });\n  }\n}\n\ndescribe('ParamHaterComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [RouterTestingHarness],\n      declarations: [ParamHaterComponent],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            paramMap: of(new Map([['id', '123']])), // Mocking route parameters\n          },\n        },\n      ],\n    }).compileComponents();\n  });\n\n  it('should display advice id', async () => {\n    const harness = await RouterTestingHarness.create();\n    const { nativeElement } = await harness.navigateByComponent(ParamHaterComponent, { params: { id: '123' } });\n\n    expect(nativeElement.textContent).toContain('Advice ID: 123');\n  });\n});\n\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,EAAE,QAAQ,MAAM;AAMzB,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAGHC,KAAA;EAFpBC,QAAQ,GAAkB,IAAI;EAE9BC,YAAoBF,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;IACvB,IAAI,CAACA,KAAK,CAACG,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,IAAI,CAACJ,QAAQ,GAAGI,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;IAClC,CAAC,CAAC;EACJ;;;;;AAPIP,mBAAmB,GAAAQ,UAAA,EAJxBb,SAAS,CAAC;EACTc,QAAQ,EAAE,iBAAiB;EAC3BC,QAAQ,EAAE;CACX,CAAC,C,EACIV,mBAAmB,CAQxB;AAEDW,QAAQ,CAAC,qBAAqB,EAAE,MAAK;EACnCC,UAAU,cAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMjB,OAAO,CAACkB,sBAAsB,CAAC;MACnCC,OAAO,EAAE,CAAClB,oBAAoB,CAAC;MAC/BmB,YAAY,EAAE,CAAChB,mBAAmB,CAAC;MACnCiB,SAAS,EAAE,CACT;QACEC,OAAO,EAAEpB,cAAc;QACvBqB,QAAQ,EAAE;UACRf,QAAQ,EAAEL,EAAE,CAAC,IAAIqB,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE;;OAE3C;KAEJ,CAAC,CAACC,iBAAiB,EAAE;EACxB,CAAC,EAAC;EAEFC,EAAE,CAAC,0BAA0B,eAAAT,iBAAA,CAAE,aAAW;IACxC,MAAMU,OAAO,SAAS1B,oBAAoB,CAAC2B,MAAM,EAAE;IACnD,MAAM;MAAEC;IAAa,CAAE,SAASF,OAAO,CAACG,mBAAmB,CAAC1B,mBAAmB,EAAE;MAAEM,MAAM,EAAE;QAAEqB,EAAE,EAAE;MAAK;IAAE,CAAE,CAAC;IAE3GC,MAAM,CAACH,aAAa,CAACI,WAAW,CAAC,CAACC,SAAS,CAAC,gBAAgB,CAAC;EAC/D,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}