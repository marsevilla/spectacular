{"ast":null,"code":"import _asyncToGenerator from \"/Users/mariadelmarsevillaescobar/Downloads/spectacular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { RouterTestingHarness } from '@angular/router/testing';\nimport { ActivatedRoute } from '@angular/router';\nimport { ParamHaterComponent } from './param-hater.component';\nimport { CommonModule } from '@angular/common';\ndescribe('ParamHaterComponent', () => {\n  let harness;\n  let fixture;\n  beforeEach(/*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [CommonModule],\n      // Ensure necessary modules are imported\n      declarations: [ParamHaterComponent],\n      providers: [{\n        provide: ActivatedRoute,\n        useValue: {\n          snapshot: {\n            params: {\n              id: '123'\n            }\n          } // Mocking route parameter \"id\"\n        }\n      }]\n    }).compileComponents();\n    harness = yield RouterTestingHarness.create();\n    fixture = TestBed.createComponent(ParamHaterComponent);\n    fixture.detectChanges();\n  }));\n  it('should display advice id', () => {\n    const componentInstance = fixture.componentInstance;\n    const compiled = fixture.nativeElement;\n    // Ensure that the component receives the correct id from route\n    expect(componentInstance.id).toBe(123);\n    // Ensure the DOM reflects the expected id (assuming it's displayed in a span with class \"advice-id\")\n    expect(compiled.querySelector('.advice-id')?.textContent).toContain('123');\n  });\n});","map":{"version":3,"names":["TestBed","RouterTestingHarness","ActivatedRoute","ParamHaterComponent","CommonModule","describe","harness","fixture","beforeEach","_asyncToGenerator","configureTestingModule","imports","declarations","providers","provide","useValue","snapshot","params","id","compileComponents","create","createComponent","detectChanges","it","componentInstance","compiled","nativeElement","expect","toBe","querySelector","textContent","toContain"],"sources":["/Users/mariadelmarsevillaescobar/Downloads/spectacular/src/app/follow-the-path/param-hater/param-hater.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { RouterTestingHarness } from '@angular/router/testing';\nimport { ActivatedRoute } from '@angular/router';\nimport { of } from 'rxjs';\nimport { ParamHaterComponent } from './param-hater.component';\nimport { CommonModule } from '@angular/common';\n\ndescribe('ParamHaterComponent', () => {\n  let harness: RouterTestingHarness;\n  let fixture: ComponentFixture<ParamHaterComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [CommonModule], // Ensure necessary modules are imported\n      declarations: [ParamHaterComponent],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            snapshot: { params: { id: '123' } }, // Mocking route parameter \"id\"\n          },\n        },\n      ],\n    }).compileComponents();\n\n    harness = await RouterTestingHarness.create();\n    fixture = TestBed.createComponent(ParamHaterComponent);\n    fixture.detectChanges();\n  });\n\n  it('should display advice id', () => {\n    const componentInstance = fixture.componentInstance;\n    const compiled = fixture.nativeElement;\n\n    // Ensure that the component receives the correct id from route\n    expect(componentInstance.id).toBe(123);\n\n    // Ensure the DOM reflects the expected id (assuming it's displayed in a span with class \"advice-id\")\n    expect(compiled.querySelector('.advice-id')?.textContent).toContain('123');\n  });\n});\n"],"mappings":";AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AACjE,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,YAAY,QAAQ,iBAAiB;AAE9CC,QAAQ,CAAC,qBAAqB,EAAE,MAAK;EACnC,IAAIC,OAA6B;EACjC,IAAIC,OAA8C;EAElDC,UAAU,cAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMT,OAAO,CAACU,sBAAsB,CAAC;MACnCC,OAAO,EAAE,CAACP,YAAY,CAAC;MAAE;MACzBQ,YAAY,EAAE,CAACT,mBAAmB,CAAC;MACnCU,SAAS,EAAE,CACT;QACEC,OAAO,EAAEZ,cAAc;QACvBa,QAAQ,EAAE;UACRC,QAAQ,EAAE;YAAEC,MAAM,EAAE;cAAEC,EAAE,EAAE;YAAK;UAAE,CAAE,CAAE;;OAExC;KAEJ,CAAC,CAACC,iBAAiB,EAAE;IAEtBb,OAAO,SAASL,oBAAoB,CAACmB,MAAM,EAAE;IAC7Cb,OAAO,GAAGP,OAAO,CAACqB,eAAe,CAAClB,mBAAmB,CAAC;IACtDI,OAAO,CAACe,aAAa,EAAE;EACzB,CAAC,EAAC;EAEFC,EAAE,CAAC,0BAA0B,EAAE,MAAK;IAClC,MAAMC,iBAAiB,GAAGjB,OAAO,CAACiB,iBAAiB;IACnD,MAAMC,QAAQ,GAAGlB,OAAO,CAACmB,aAAa;IAEtC;IACAC,MAAM,CAACH,iBAAiB,CAACN,EAAE,CAAC,CAACU,IAAI,CAAC,GAAG,CAAC;IAEtC;IACAD,MAAM,CAACF,QAAQ,CAACI,aAAa,CAAC,YAAY,CAAC,EAAEC,WAAW,CAAC,CAACC,SAAS,CAAC,KAAK,CAAC;EAC5E,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}